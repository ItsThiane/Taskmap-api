apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: backend-app
  labels:
    app: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: fastapi-app:latest  
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
          name: backend-config
        - secretRef:
          name: backend-secret
        env:
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: backend-config
                key: DB_HOST
          - name: DB_NAME
             valueFrom:
              configMapKeyRef:
                name: backend-config
                key: DB_NAME
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: DB_USER
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: DB_PASSWORD
          

            
      livenessProbe: #Verification que l'application est en vie   
        httpGet:
          path: /health/live
          port: 8000
        initialDelaySeconds: 5
      readinessProbe: #Verification que l'application est prete
        httpGet:
          path: /health/ready
          port: 8000
        initialDelaySeconds: 3
        periodSeconds: 5


  # Init container POUR VERIFIER LA disponibilite de la base de donnees
    initContainers:
    - name: check-db
      image: busybox
      command: ['sh', '-c', 'until nc -z -v -w30 MySqlDb 3306; do echo waiting for database; sleep 5; done;']
      resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: "64Mi"
            cpu: "250m"
